<Window x:Class="MVVMArch.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:vm="clr-namespace:MVVMArch"
        xmlns:helper="clr-namespace:MVVMArch.Helper"
        xmlns:str="clr-namespace:System;assembly=mscorlib"
        xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
        xmlns:control="clr-namespace:MVVMArch.UserControls"
        mc:Ignorable="d" WindowState="Maximized"
        Title="Result fetch" Height="700" Width="1000">
    <Window.DataContext>
        <vm:ArchViewModel />
    </Window.DataContext>
    
    <Grid Name="demo" Width="1000" Height="700" HorizontalAlignment="Left" VerticalAlignment="Top">
        <Grid.RowDefinitions>
            <RowDefinition Height="120" />
            <RowDefinition Height="130" />
            <RowDefinition Height="120" />
            <RowDefinition Height="120*" />
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="150" />
            <ColumnDefinition Width="150" />
            <ColumnDefinition Width="150*" />
            <ColumnDefinition Width="150" />
        </Grid.ColumnDefinitions>
        <StackPanel  Orientation="Vertical" Margin="0" Grid.Row="0" Grid.Column="0">
            <Label x:Name="label" Content="my testing"/>
            <TextBox helper:EnterKeyHelpers.EnterKeyCommand="{Binding SimpleCommand}" SpellCheck.IsEnabled="True"  x:Name="textBox1" HorizontalAlignment="Left" Height="23"  TextWrapping="Wrap" Text="{Binding SourceTxt,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"  VerticalAlignment="Top" Width="120" TextChanged="textBox1_TextChanged">
            </TextBox>
            <TextBox  x:Name="textBox" Text="{Binding DestinationTxt,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Left"  Height="23"  TextWrapping="Wrap"  VerticalAlignment="Top" Width="120" />
            <Button  x:Name="button" Content="{Binding DestinationTxt,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Left"  Width="79" Height="21" Command="{Binding SimpleCommand}" CommandParameter="{Binding ElementName=textBox1}">
                <Button.Style>
                    <Style TargetType="{x:Type Button}">
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Foreground" Value="Red"></Setter>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
            </Button>
        </StackPanel>

        <StackPanel Margin="10" Grid.Row="1" Grid.Column="0">
            <Label Target="{Binding ElementName=txtName}">
                <StackPanel Orientation="Horizontal">
                    <Image Source="http://cdn1.iconfinder.com/data/icons/fatcow/16/bullet_green.png" />
                    <TextBlock Text="_Name:" />
                </StackPanel>
            </Label>
            <TextBox Name="txtName" />
            <Label Target="{Binding ElementName=txtMail}">
                <StackPanel Orientation="Horizontal">
                    <Image Source="http://cdn1.iconfinder.com/data/icons/fatcow/16/bullet_blue.png" />
                    <TextBlock Text="_Mail:" />
                </StackPanel>
            </Label>
            <TextBox Name="txtMail" />
        </StackPanel>

        <StackPanel Margin="10" Grid.Row="2" Grid.Column="0">
            <Label FontWeight="Bold">Application Options</Label>
            <StackPanel Margin="10,5">
                <CheckBox IsThreeState="True" Name="cbAllFeatures" Checked="cbAllFeatures_CheckedChanged" Unchecked="cbAllFeatures_CheckedChanged">Enable all</CheckBox>
                <StackPanel Margin="20,5">
                    <CheckBox Name="cbFeatureAbc" Checked="cbFeature_CheckedChanged" Unchecked="cbFeature_CheckedChanged">Enable feature ABC</CheckBox>
                    <CheckBox Name="cbFeatureXyz" IsChecked="True" Checked="cbFeature_CheckedChanged" Unchecked="cbFeature_CheckedChanged">Enable feature XYZ</CheckBox>
                    <CheckBox Name="cbFeatureWww" Checked="cbFeature_CheckedChanged" Unchecked="cbFeature_CheckedChanged">Enable feature WWW</CheckBox>
                </StackPanel>
            </StackPanel>
        </StackPanel>

        <StackPanel Margin="10" Grid.Row="0" Grid.Column="1">
            <Label FontWeight="Bold">Are you ready?</Label>
            <RadioButton>
                <WrapPanel>
                    <Image  Width="16" Height="16" Margin="0,0,5,0" />
                    <TextBlock Text="Yes" Foreground="Green" />
                </WrapPanel>
            </RadioButton>
            <RadioButton Margin="0,5">
                <WrapPanel>
                    <Image  Width="16" Height="16" Margin="0,0,5,0" />
                    <TextBlock Text="No" Foreground="Red" />
                </WrapPanel>
            </RadioButton>
            <RadioButton IsChecked="True">
                <WrapPanel>
                    <Image  Width="16" Height="16" Margin="0,0,5,0" />
                    <TextBlock Text="Maybe" Foreground="Gray" />
                </WrapPanel>
            </RadioButton>
        </StackPanel>

        <StackPanel Margin="10" Grid.Row="1" Grid.Column="1">
            <Label>Text:</Label>
            <TextBox />
            <Label>Password:</Label>
            <PasswordBox helper:PasswordBoxAssistant.BindPassword="True" helper:PasswordBoxAssistant.BoundPassword="{Binding Path=Password,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" Name="Passwrd" Password="rakesh" MaxLength="6" PasswordChar="*" />
        </StackPanel>

        <Grid Grid.Row="2" Grid.Column="1">
            <control:UserControl1>
                <control:UserControl1.setText>
                    "Here is a custom controller"
                </control:UserControl1.setText>
            </control:UserControl1>
        </Grid>

        <Grid  Grid.Row="0" Grid.Column="2">
            <Button Margin="0,0,0,0" >
                <Button.Content>Test tooltip</Button.Content>
                <Button.ToolTip>
                    <StackPanel>
                        <TextBlock FontWeight="Bold" FontSize="14" Margin="0,0,0,5">Open file</TextBlock>
                        <TextBlock>
                        Search your computer or local network
                        <LineBreak />
                        for a file and open it for editing.
                        </TextBlock>
                    </StackPanel>
                </Button.ToolTip>
            </Button>
        </Grid>

        <Grid Grid.Column="2" Grid.Row="1"  Margin="0">
            <Button Content = "Round Button!" Style="{DynamicResource ButtonStyle}" 
         Width = "150" Margin = "0" />
            <Button Content = "Default Button!" Height = "40" 
         Width = "150" Margin = "0" />
        </Grid>

        <Grid Grid.Column="2" Grid.Row="3"  >
            <ListBox ItemsSource="{Binding Persons}" ItemTemplate="{DynamicResource ListSource}">
            </ListBox>
        </Grid>

    </Grid>

</Window>
